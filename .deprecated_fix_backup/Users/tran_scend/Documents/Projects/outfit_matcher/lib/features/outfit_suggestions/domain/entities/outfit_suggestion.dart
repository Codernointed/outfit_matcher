import 'package:vestiq/features/wardrobe/domain/entities/clothing_item.dart';

// These parts will be generated by running build_runner
// part 'outfit_suggestion.freezed.dart';
// part 'outfit_suggestion.g.dart';

/// Enum for outfit styles
enum OutfitStyle {
  /// Casual style for everyday wear
  casual,

  /// Formal business style
  formal,

  /// Sporty/athletic style
  sport,

  /// Evening/party style
  party,

  /// Vacation/beach style
  vacation,
}

/// Outfit suggestion entity model
class OutfitSuggestion {
  /// Unique identifier for the outfit suggestion
  final String id;

  /// Name of the outfit suggestion
  final String name;

  /// Style of the outfit
  final OutfitStyle style;

  /// Description of why the outfit works
  final String description;

  /// List of clothing items that make up the outfit
  final List<ClothingItem> items;

  /// Whether the outfit is favorited
  final bool isFavorite;

  /// Creation timestamp
  final DateTime createdAt;

  /// Default constructor for outfit suggestion
  const OutfitSuggestion({
    required this.id,
    required this.name,
    required this.style,
    required this.description,
    required this.items,
    this.isFavorite = false,
    required this.createdAt,
  });

  /// Create from JSON
  factory OutfitSuggestion.fromJson(Map<String, dynamic> json) {
    return OutfitSuggestion(
      id: json['id'] as String,
      name: json['name'] as String,
      style: OutfitStyle.values.firstWhere(
        (e) => e.toString() == 'OutfitStyle.${json['style']}',
        orElse: () => OutfitStyle.casual,
      ),
      description: json['description'] as String,
      items:
          (json['items'] as List<dynamic>)
              .map((e) => ClothingItem.fromJson(e as Map<String, dynamic>))
              .toList(),
      isFavorite: json['isFavorite'] as bool? ?? false,
      createdAt: DateTime.parse(json['createdAt'] as String),
    );
  }

  /// Convert to JSON
  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'name': name,
      'style': style.toString().split('.').last,
      'description': description,
      'items': items.map((item) => item.toJson()).toList(),
      'isFavorite': isFavorite,
      'createdAt': createdAt.toIso8601String(),
    };
  }
}
